var numberOfDrumButtons = document.querySelectorAll(".drum").length;

for(var i = 0; i<numberOfDrumButtons; i++ ) {
document.querySelectorAll(".drum")[i].addEventListener("click", function(){
  /*The addEventListener() method is used to attach an event handler to a particular element. It does not override the existing event handlers.
    Events are said to be an essential part of the JavaScript. A web page responds according to the event that occurred. Events can be user-generated
    or generated by API's. An event listener is a JavaScript's procedure that waits for the occurrence of an event. The addEventListener() method
    is an inbuilt function of JavaScript. We can add multiple event handlers to a particular element without overwriting the existing event
    handlers.*/
    var buttonInnerHTML = this.innerHTML;
    makeSound(buttonInnerHTML);
    buttonAnimation(buttonInnerHTML);
    /* var audio = new Audio('sounds/tom-1.mp3');
    audio.play();
     "new Audio('url')", it is a method which creates a new audio element used to play sound in javascript.*/
});
}
document.addEventListener("keypress", function(event) {
  makeSound(event.key);
  buttonAnimation(event.key);
});
function makeSound(key) {
  switch (key) {
    case 'w':
       var tom1 = new Audio('sounds/tom-1.mp3');
       tom1.play();
       break;
    case 'a':
       var tom2 = new Audio('sounds/tom-2.mp3');
       tom2.play();
       break;
    case 's':
       var tom3 = new Audio('sounds/tom-3.mp3');
       tom3.play();
       break;
    case 'd':
       var tom4 = new Audio('sounds/tom-4.mp3');
       tom4.play();
       break;
    case 'j':
       var crash = new Audio('sounds/crash.mp3');
       crash.play();
       break;
    case 'k':
       var kickBass = new Audio('sounds/kick-bass.mp3');
       kickBass.play();
       break;
    case 'l':
       var snare = new Audio('sounds/snare.mp3');
       snare.play();
       break;
    default:
      console.log("invalid");
  }
}
function buttonAnimation(currentKey) {
   var activeButton = document.querySelector("." + currentKey);  //It accesses the classes represented by the letters above.
   activeButton.classList.add("pressed");  // Here we added the styling in the class "pressed" to our activeButton
   // Now we have to set a time out function so that the styling goes away after a certain delay.
   setTimeout(function () {
     activeButton.classList.remove("pressed");
   }, 100); // this is the time delay of 0.1sec
}
